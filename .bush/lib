b.backsort () { rev | sort -u | rev; }
b.files () {
    find -L "$1" \( -type f -not -name "*-" -print \) -or \( -type d -name "*-" -prune \)  | b.backsort
}

b.tesc ()   { printf "\e[%sm%s\e[0m" "$1" "$2"; }
b.tcolor () { b.tesc "1;$1" "$2"; }
b.green ()  { b.tcolor  32  "$*"; }
b.red ()    { b.tcolor  31  "$*"; }
b.bold ()   { b.tcolor  39  "$*"; }

b.painterr () {
    local err="${1:-$?}"
    if [[ "$err" == "0" ]]; then b.green "$err"
                            else b.red "$err"
    fi
}

b.stopwatch () {
    local start=$(perl -MTime::HiRes=time -e 'printf "%.9f", time')
    echo -n "perl -MTime::HiRes=time -e 'printf \"%.3f\", time - $start'"
} 

b.oneline () {
    [[ "$BUSH_1LINE" ]] && return 1
    BUSH_1LINE=true
    return 0
}
b.morelines () { 
    [[ "$BUSH_1LINE" ]] || return 1
    unset BUSH_1LINE
    return 0
}

b.linesep () { # https://stackoverflow.com/a/15184414/1964213 - trailing new line 
    [[ "$BUSH_MUTE" ]] && return 0 
    [[ "$BUSH_1LINE" ]] && echo -n " " || echo    
}

b! () {
    [[ "$BUSH_MUTE" ]] && return 1 
    echo -n "$@"
    b.linesep
}

b.morelines! () {
    b.morelines && b! "â†“"
}

b.oneline! () {
    b.oneline  && b! "â†‘" 
}

b.yes? () {
    [[ "$BUSH_AUTOREPLY" =~ ^[Yy]$ ]] && return 0
    [[ "$BUSH_AUTOREPLY" ]] && return 1

    local prompt="${1:-"Continue?"}"
    read -p "$prompt " -n 1 -r
    b.linesep
    [[ $REPLY =~ ^[Yy]$ ]] 
} 

b.have? () {
    type $1 &>/dev/null && return 0
    [[ "$1" == */ ]] && [[ -d "$1" ]] && return 0
    [[ "$1" == /* ]] && [[ -r "$1" ]] && return 0
    [[ "$1" == ./* ]] && [[ -r "$1" ]] && return 0
    b! "Missing $1!"
    return 1
}
