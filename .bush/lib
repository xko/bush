
b.files () {
    find -L "$1" \( -type f -not -name "*-" -print \) -or \( -type d -name "*-" -prune \)  | uniq | rev | sort | rev
}


b.green () {
    printf "\e[1;32m$1\e[1;0m"
}
b.red () {
    printf "\e[1;31m$1\e[1;0m"
}

b.redgreen () {
    [[ "$1" == "0" ]] && b.green "$1" 
    [[ "$1" != "0" ]] && b.red "$1"
}

b.stopwatch () {
    local start=$(perl -MTime::HiRes=time -e 'printf "%.9f", time')
    echo -n "perl -MTime::HiRes=time -e 'printf \"%.3f\", time - $start'"
} 

b.oneline? () {
    [[ "$BUSH_IOMODE" == *"(1line)"* ]]
}

b.morelines () { 
    b.oneline? && echo "â†“"
    BUSH_IOMODE=${BUSH_IOMODE/"(1line)"/}
}

b.oneline () {
    b.oneline? && return 0
    BUSH_IOMODE="$BUSH_IOMODE(1line)"
    return 1
}

b.linesep () { # https://stackoverflow.com/a/15184414/1964213 - trailing new line 
    b.oneline? && echo -n " " || echo    
}

b.echo () {
    echo -n $@
    b.linesep
}

b.yes? () {
    [[ "$BUSH_AUTOREPLY" =~ ^[Yy]$ ]] && return 0
    [[ "$BUSH_AUTOREPLY" ]] && return 1

    local prompt="${1:-"Continue?"}"
    read -p "$prompt " -n 1 -r
    b.linesep
    [[ $REPLY =~ ^[Yy]$ ]] 
} 


b.have? () {
    type $1 &>/dev/null && return 0
    [[ "$1" == */ ]] && [[ -d "$1" ]] && return 0
    [[ "$1" == /* ]] && [[ -r "$1" ]] && return 0
    [[ "$1" == ./* ]] && [[ -r "$1" ]] && return 0
    b.echo "Missing $1!"
    return 1
} 