b.files () {
    find -L "$1" \( -type f -not -name "*-" -print \) -or \( -type d -name "*-" -prune \)  | uniq | rev | sort | rev
}


b.green () {
    printf "\e[1;32m$1\e[1;0m"
}
b.red () {
    printf "\e[1;31m$1\e[1;0m"
}

b.redgreen () {
    [[ "$1" == "0" ]] && b.green "$1" 
    [[ "$1" != "0" ]] && b.red "$1"
}

b.stopwatch () {
    local start=$(perl -MTime::HiRes=time -e 'printf "%.9f", time')
    echo -n "perl -MTime::HiRes=time -e 'printf \"%.3f\", time - $start'"
} 

b.linesep () { # >>> $(b.linesep) wont't work, it swallows trailing newlines:  https://stackoverflow.com/a/15184414/1964213 
    [[ "$b_1linemode" ]] && echo -n " " || echo    
}

b.yes? () {
    local prompt="${1:-"Continue?"}"
    read -p "$prompt " -n 1 -r
    b.linesep
    [[ $REPLY =~ ^[Yy]$ ]] 
} 


b.have? () {
    type $1 &>/dev/null && return 0
    [[ "$1" == */ ]] && [[ -d "$1" ]] && return 0
    [[ "$1" == /* ]] && [[ -r "$1" ]] && return 0
    [[ "$1" == ./* ]] && [[ -r "$1" ]] && return 0
    echo -n "Missing $1!"
    b.linesep 
    return 1
} 